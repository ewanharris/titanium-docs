{"name":"Modules.BLE.PeripheralManager","summary":"<p>An object that manages and advertises peripheral services exposed by this app.</p>\n","extends":"Titanium.Proxy","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"object","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/PeripheralManager.yml","events":[{"name":"didUpdateState","summary":"<p>Fired whenever the state of the module's internal peripheral manager changes.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"state","summary":"<p>An integer describing the state of the module's internal peripheral manager. See the MANAGER_STATE_* constants.</p>\n","type":"Number"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didPublishL2CAPChannel","summary":"<p>Tells the delegate that the peripheral manager created a listener for incoming L2CAP channel connections.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"psm","summary":"<p>The Protocol/Service Multiplexer (PSM) of the published channel.</p>\n","type":"Number"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred..</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didUnpublishL2CAPChannel","summary":"<p>Tells the delegate that the peripheral manager removed a published service from the local system.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"psm","summary":"<p>The Protocol/Service Multiplexer (PSM) of the published channel.</p>\n","type":"Number"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred..</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didOpenL2CAPChannel","summary":"<p>Tells the delegate that the peripheral manager opened an L2CAP channel.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"channel","summary":"<p>The channel opened by the manager.</p>\n","type":"Modules.BLE.L2CAPChannel"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred..</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"willRestoreState","summary":"<p>Tells the delegate that the peripheral manager opened an L2CAP channel.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"advertisementData","summary":"<p>An object (dictionary) containing the data being advertised at the time the application was terminated by the system. See the startAdvertising method for more detail.</p>\n","type":"Object"},{"name":"services","summary":"<p>Array of uuids of Services</p>\n","type":"Array<String>"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didStartAdvertising","summary":"<p>This event returns the result of a startAdvertising call. If advertisement could not be started, the cause will be detailed in the errorCode, errorDomain, and errorDescription properties.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred..</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didAddService","summary":"<p>This event returns the result of a addService call. If service could not be added, the cause will be detailed in the errorCode, errorDomain, and errorDescription properties.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"service","summary":"<p>An object representing the service that was added.</p>\n","type":"Modules.BLE.Service"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred..</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didSubscribeToCharacteristic","summary":"<p>This event is fired when a central configures a characteristic to notify or indicate. It should be used as a cue to start sending updates as the characteristic value changes.</p>\n","description":"<p>In Android, this event is fired by writing on the Client Configuration UUID (00002902-0000-1000-8000-00805f9b34fb)\ndescriptor for given characteristic by central with descriptor values,BLE.ENABLE_NOTIFICATION_VALUE\nor BLE.ENABLE_INDICATION_VALUE.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"central","summary":"<p>An object representing the central that subscribed.</p>\n","type":"Modules.BLE.Central"},{"name":"characteristic","summary":"<p>An object representintg the characteristic to which the central subscribed.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didUnsubscribeFromCharacteristic","summary":"<p>This event is fired when a central removes notifications/indications from a characteristic.</p>\n","description":"<p>In Android, this event is fired by writing on the Client Configuration UUID (00002902-0000-1000-8000-00805f9b34fb)\ndescriptor for given characteristic by central with value BLE.DISABLE_NOTIFICATION_VALUE</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"central","summary":"<p>An object representing the central that unsubscribed.</p>\n","type":"Modules.BLE.Central"},{"name":"characteristic","summary":"<p>An object representintg the characteristic from which the central unsubscribed.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didReceiveReadRequest","summary":"<p>This event is fired when the module's internal peripheral manager receives a read request.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"request","summary":"<p>An object representing the request.</p>\n","type":"Modules.BLE.Request"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didReceiveWriteRequests","summary":"<p>This event is fired when the module's internal peripheral manager receives a write request for one or more characteristics.</p>\n","description":"<p>For every invocation of this method, respondToRequest should be called exactly once. If the requests parameter contains multiple requests, they must be treated as an atomic unit. If the execution of one of the requests would cause a failure, the request and error reason should be provided and none of the requests should be executed.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"request","summary":"<p>request objects describing the incoming write request</p>\n","type":"Array<Modules.BLE.Request>"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didReceiveDescriptorReadRequest","summary":"<p>This event is fired when the module's internal peripheral manager receives a read request on descriptor.</p>\n","platforms":[{"since":"1.1.0","name":"android"}],"properties":[{"name":"descriptorRequest","summary":"<p>An object representing the descriptor request.</p>\n","type":"Modules.BLE.DescriptorRequest"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didReceiveDescriptorWriteRequests","summary":"<p>This event is fired when the module's internal peripheral manager receives a write request on descriptor.</p>\n","platforms":[{"since":"1.1.0","name":"android"}],"properties":[{"name":"descriptorRequests","summary":"<p>An object representing the descriptor request.</p>\n","type":"Modules.BLE.DescriptorRequest"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"readyToUpdateSubscribers","summary":"<p>This event is fired when the module's internal peripheral manager receives a write request for one or more characteristics.This event is fired after a failed call to updateValue, when the module's internal peripheral manager is again ready to send characteristic value updates.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}]}],"methods":[{"name":"addService","summary":"<p>Publishes a service and any of its associated characteristics and characteristic descriptors to the local GATT database.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristics","summary":"<p>A list of characteristics of a service.</p>\n","type":"Array<Modules.BLE.Characteristic>"},{"name":"uuid","summary":"<p>The Bluetooth-specific UUID of the attribute.</p>\n","type":"String"},{"name":"primary","summary":"<p>The type of the service (primary or secondary).</p>\n","type":"Boolean"}],"returns":{"summary":"<p>Object of service which is added.</p>\n","type":"Modules.BLE.Service"}},{"name":"closePeripheral","summary":"<p>This method closes the peripheral.</p>\n","description":"<p>This method, when called terminate the ongoing advertisement process if any and closes the\nperipheral. Application should call this method, soon after it is done with the peripheral\noperations.</p>\n","platforms":[{"since":"1.1.0","name":"android"}],"returns":{"type":"void"}},{"name":"publishL2CAPChannel","summary":"<p>Attempts to open an L2CAP channel to the peripheral using the supplied Protocol/Service Multiplexer (PSM).</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"encryptionRequired","summary":"<p>The bool can be true if the service requires the link to be encrypted before a stream can be established. false if the service can be used over an unsecured link.</p>\n","type":"Boolean"}],"returns":{"type":"void"}},{"name":"removeAllServices","summary":"<p>Removes all published services from the local GATT database.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"returns":{"type":"void"}},{"name":"removeService","summary":"<p>Removes a specified published service from the local GATT database.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"service","summary":"<p>Object of service you want to remove.</p>\n","type":"Modules.BLE.Service"}],"returns":{"type":"void"}},{"name":"respondToDescriptorRequest","summary":"<p>Used to respond to request(s) received via the didReceiveDescriptorReadRequest or didReceiveDescriptorWriteRequest event.</p>\n","platforms":[{"since":"1.1.0","name":"android"}],"parameters":[{"name":"descriptorRequest","summary":"<p>The request to which the peripheral is responding.</p>\n","type":"Modules.BLE.DescriptorRequest"},{"name":"result","summary":"<p>The result code; see the ATT_ERROR* constants.</p>\n","type":"Number"}],"returns":{"type":"void"}},{"name":"respondToRequest","summary":"<p>Used to respond to request(s) received via the didReceiveReadRequest or didReceiveWriteRequests event.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"request","summary":"<p>The request to which the peripheral is responding.</p>\n","type":"Modules.BLE.Request"},{"name":"result","summary":"<p>The result code; see the ATT_ERROR* constants.</p>\n","type":"Number"}],"returns":{"type":"void"}},{"name":"setDesiredConnectionLatency","summary":"<p>Sets the desired connection latency for an existing connection on the module's internal peripheral manager.</p>\n","description":"<p>Connection latency changes are not guaranteed, so the resultant latency may vary. If a desired latency is not set, the latency chosen by the central at the time of connection establishment will be used. Typically, it is not necessary to change the latency.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"latency","summary":"<p>The desired connection latency. see BLE.PERIPHERAL_MANAGER_CONNECTION_LATENCY_*</p>\n","type":"Number"},{"name":"central","summary":"<p>A connected central</p>\n","type":"Modules.BLE.Central"}],"returns":{"type":"void"}},{"name":"startAdvertising","summary":"<p>Instructs the module's internal peripheral manager to start advertising.</p>\n","description":"<p>Important: You must call the initPeripheralManager function first!\nSupported advertising data types are localName and serviceUUIDs. When in the foreground, an\napplication can utilize up to 28 bytes of space in the initial advertisement data for any combination\nof the supported advertising data types. If this space is used up, there are an additional 10 bytes\nof space in the scan response that can be used only for the local name.\nNote that these sizes do not include the 2 bytes of header information that are required for each\nnew data type. Any service UUIDs that do not fit in the allotted space will be added to a special\n&quot; overflow&quot; area, and can only be discovered by an iOS device that is explicitly scanning for them.\nWhile an application is in the background, the local name will not be used and all service UUIDs\nwill be placed in the &quot;overflow&quot; area. In Android, Before starting the advertisement, user must\nadd the service first. If this is not the case, then this method will not work as expected.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"localName","summary":"<p>The local name of a peripheral. This parameter is of type boolean in android</p>\n","type":["String","Boolean"]},{"name":"serviceUUIDs","summary":"<p>An array of service UUIDs.</p>\n","type":"Array<String>"}],"returns":{"type":"void"}},{"name":"startAdvertisingBeaconRegion","summary":"<p>Instructs the module's internal peripheral manager to start advertising for beacon region.</p>\n","description":"<p>Important: You must call the initPeripheralManager function first!</p>\n","platforms":[{"since":"1.1.0","name":"iphone"},{"since":"1.1.0","name":"ipad"}],"parameters":[{"name":"measurePower","summary":"<p>This is the RSSI of the device observed from one meter in its intended environment.This value is optional, but should be specified to achieve the best ranging performance. If not specified, it will default to a pre-determined value for the device.</p>\n","type":"Number","optional":true},{"name":"beaconRegion","summary":"<p>Object of Beacon Region.</p>\n","type":"Modules.BLE.BeaconRegion"}],"returns":{"type":"void"}},{"name":"stopAdvertising","summary":"<p>Instructs the module's internal peripheral manager to stop advertising.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"returns":{"type":"void"}},{"name":"stopAdvertising","summary":"<p>Instructs the module's internal peripheral manager to stop advertising.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"returns":{"type":"void"}},{"name":"unpublishL2CAPChannel","summary":"<p>The service PSM to be removed from the system.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"PSM","summary":"<p>The PSM of the channel along with we can close the particular channel.</p>\n","type":"Number"}],"returns":{"type":"void"}},{"name":"updateValue","summary":"<p>Instructs the module's internal peripheral manager to send an updated characteristic value to one or more centrals, via a notification or indication.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristic","summary":"<p>The value of the characteristic.</p>\n","type":"Modules.BLE.MutableCharacteristic"},{"name":"data","summary":"<p>updated characteristic value.</p>\n","type":"Titanium.Buffer"},{"name":"centrals","summary":"<p>The list of centrals that need to be updated. If not specified, all subscribed centrals will be updated.</p>\n","type":"Array<Modules.BLE.Central>"}],"returns":{"summary":"<p>True if the update could be sent, otherwise false. In iOS, if false was returned, the readyToUpdateSubscribers event will be fired once space has become available, and the update should be re-sent if so desired. In Android, if there are multiple centrals need to be updated, then for any of the central, if the update could not be sent, it returns false.</p>\n","type":"Boolean"}}],"properties":[{"name":"isAdvertising","summary":"<p>Whether or not the the module's internal peripheral manager is currently advertising data.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Boolean"},{"name":"peripheralManagerState","summary":"<p>State of the module's internal peripheral manager. Its value is one of the MANAGER_STATE_* constants.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Number"},{"name":"restoredPeripheralManagerIdentifier","summary":"<p>string the restoration identifier for a peripheral manager object. this is the same string you assigned to the restoreIdentifier parameter of the initPeripheralManager function.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"String"}],"subtype":"proxy","constants":[]}

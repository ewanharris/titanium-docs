{"name":"Modules.BLE.Peripheral","summary":"<p>A remote peripheral device.</p>\n","extends":"Titanium.Proxy","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"object","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Peripheral.yml","events":[{"name":"didDiscoverCharacteristics","summary":"<p>This event returns the result of a call to the discoverCharacteristics method. If the characteristic(s) were read successfully, they can be retrieved via the service property's characteristics property.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the discoverCharacteristics method. If the peripheral successfully discovers the characteristics of the specified service, you can access them through the service’s characteristics property.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"service","summary":"<p>The service to which the characteristics belong.</p>\n","type":"Modules.BLE.Service"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didDiscoverDescriptorsForCharacteristics","summary":"<p>This event returns the result of a call to the discoverDescriptorsForCharacteristic method.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the discoverDescriptors method. If the peripheral successfully discovers the descriptors of the specified characteristic, you can access them through the characteristic’s descriptors property.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"characteristic","summary":"<p>The service to which the characteristics belong.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didDiscoverIncludedServices","summary":"<p>This event returns the result of a call to the discoverIncludedServices method.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the discoverIncludedServices method. If the peripheral successfully discovers services, you can access them through the service’s includedServices property.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didDiscoverServices","summary":"<p>Discovers the specified services of the peripheral.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the discoverServices method. If the peripheral successfully discovers services, you can access them through the peripheral’s services property.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didModifyServices","summary":"<p>This event is fired when the services of the peripheral change.</p>\n","description":"<p>Core Bluetooth invokes this method whenever one or more services of a peripheral change. The invalidatedServices parameter includes any changed services that you previously discovered; you can no longer use these services. You can use the discoverServices method to discover any new services that the peripheral added to its database. Use this same method to find out whether any of the invalidated services that you were using (and want to continue using) now have a different location in the peripheral’s database.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"services","summary":"<p>The services that have been invalidated.</p>\n","type":"Array<Modules.BLE.Service>"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didUpdateName","summary":"<p>This event is fired when the name of the peripheral changes.</p>\n","description":"<p>Core Bluetooth invokes this method whenever the peripheral’s Generic Access Profile (GAP) device name changes. Since a peripheral device can change its GAP device name, you can implement this method if your app needs to display the current name of the peripheral device.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didUpdateNotificationStateForCharacteristics","summary":"<p>This event returns the result of a call to the subscribeToCharacteristic or unsubscribeFromCharacteristic method.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the subscribeToCharacteristic or unsubscribeFromCharacteristic method.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"characteristic","summary":"<p>The characteristic to subscribe.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"isSubscribed","summary":"<p>A Boolean value that specifies whether the didUpdateNotificationStateForCharacteristics event is for subscribe or unsubscribe operation. true, if subscribe and false otherwise.</p>\n","type":"Boolean"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didReadRSSI","summary":"<p>This event returns the result of a call to the readRSSI method.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the readRSSI() method, while the peripheral is connected to the central manager. If successful, the error parameter is nil and the parameter RSSI reports the peripheral’s signal strength, in decibels. If unsuccessful, the error parameter returns the cause of the failure.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"rssi","summary":"<p>value last read</p>\n","type":"Number"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didUpdateValueForCharacteristic","summary":"<p>This event is fired after a call to the readValueForCharacteristic method, or upon receipt of a notification/indication.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the readValueForCharacteristic method. A peripheral also invokes this method to notify your app of a change to the value of the characteristic for which the app previously enabled notifications by calling subscribeToCharacteristic or unsubscribeFromCharacteristic method.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"characteristic","summary":"<p>The characteristic containing the value.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didUpdateValueForDescriptor","summary":"<p>This event returns the result of a call to the readValueForDescriptor method.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the readValueForDescriptor method.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"descriptor","summary":"<p>The characteristic descriptor containing the value.</p>\n","type":"Modules.BLE.Descriptor"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didWriteValueForCharacteristic","summary":"<p>This event returns the result of a call to the writeValueForCharacteristic method.</p>\n","description":"<p>Core Bluetooth invokes this method only when your app calls the writeValueForCharacteristic method with the BLE.CHARACTERISTIC_WRYTE_TYPE_WITH_RESPOSNE constant specified as the write type.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral providing this information.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"characteristic","summary":"<p>The characteristic containing the value.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didWriteValueForDescriptor","summary":"<p>This event returns the result of a call to the writeValueForDescriptor method.</p>\n","description":"<p>Core Bluetooth invokes this method when your app calls the writeValueForDescriptor method.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral sending the event.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"descriptor","summary":"<p>The object representing the descriptor that was changed.</p>\n","type":"Modules.BLE.Descriptor"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"peripheralIsReadyToSendWriteWithoutResponse","summary":"<p>Tells the delegate that a peripheral is again ready to send characteristic updates.</p>\n","description":"<p>The peripheral calls this delegate method after a failed call to writeValueForCharacteristic, once peripheral is ready to send characteristic value updates.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral sending the event.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didOpenChannel","summary":"<p>This method delivers the result of a previous call to openL2CAPChannel.</p>\n","description":"<p>Delivers the result of an attempt to open an L2CAP channel.</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"sourcePeripheral","summary":"<p>The peripheral sending the event.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"channel","summary":"<p>A live L2CAP connection to a remote device.</p>\n","type":"Modules.BLE.L2CAPChannel"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an error occurred.</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]}],"methods":[{"name":"discoverCharacteristics","summary":"<p>Discovers the specified characteristic(s) of a service. The result of this operation is returned via the didDiscoverCharacteristics event. In android, all the characteristics have already been discovered, as part of the discoverServices operation. So, this method is kept in android to keep parity with the iOS platform.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"services","summary":"<p>The service whose characteristics you want to discover.</p>\n","type":"Modules.BLE.Service"},{"name":"characteristicUUIDs","summary":"<p>An array of UUID objects that you are interested in. Each UUID identifies the characteristic you want to discover.</p>\n","type":"Array<String>","optional":true}],"returns":{"type":"void"}},{"name":"discoverDescriptorsForCharacteristic","summary":"<p>Discovers the descriptor(s) of a characteristic.The result of this operation is returned via the didDiscoverDescriptorsForCharacteristics event. In android, all the descriptors have already been discovered, as part of the discoverServices operation. So, this method is kept in android to keep parity with the iOS platform.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristic","summary":"<p>The characteristic whose descriptors you want to discover.</p>\n","type":"Modules.BLE.Characteristic"}],"returns":{"type":"void"}},{"name":"discoverIncludedServices","summary":"<p>Discovers the specified included service(s) of a service.The result of this operation is returned via the didDiscoverIncludedServices event. In android, all the included services have already been discovered, as part of the discoverServices operation. So, this method is kept in android to keep parity with the iOS platform.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"services","summary":"<p>The service whose characteristics you want to discover.</p>\n","type":"Modules.BLE.Service"},{"name":"includedServiceUUIDs","summary":"<p>An array of UUID objects that you are interested in. Each UUID identifies the included service you want to discover.</p>\n","type":"Array<String>","optional":true}],"returns":{"type":"void"}},{"name":"discoverServices","summary":"<p>Discovers available service(s) on the peripheral. The result of this operation is returned via the didDiscoverServices event.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"serviceUUIDs","summary":"<p>An array of UUID objects that you are interested in. Each UUID identifies the services you want to discover. In android, the behavior is discoverServices discovers all the available services irrespective of this parameter.</p>\n","type":"Array<String>","optional":true}],"returns":{"type":"void"}},{"name":"maximumWriteValueLength","summary":"<p>The maximum amount of data, in bytes, you can send to a characteristic in a single write type.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristicWriteType","summary":"<p>Values representing the possible write types to a characteristic’s value.</p>\n","type":"Number"}],"returns":{"type":"void"}},{"name":"openL2CAPChannel","summary":"<p>Attempts to open an L2CAP channel to the peripheral using the supplied Protocol/Service Multiplexer (PSM).</p>\n","platforms":[{"since":"1.1.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"psmIdentifier","summary":"<p>The PSM of the channel to open.</p>\n","type":"Number"},{"name":"encryptionRequired","summary":"<p>The bool can be true if the service requires the link to be encrypted before a stream can be established. false if the service can be used over an unsecured link. This parameter is applicable in android only and the default value is false.</p>\n","type":"Boolean","optional":true}],"returns":{"type":"void"}},{"name":"readRSSI","summary":"<p>Retrieves the current RSSI value for the peripheral while connected to the central manager.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"returns":{"type":"void"}},{"name":"readValueForCharacteristic","summary":"<p>Reads the value of a characteristic.The result of this operation is returned via the didUpdateValueForCharacteristic event.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristic","summary":"<p>The characteristic whose value you want to read.</p>\n","type":"Modules.BLE.Characteristic"}],"returns":{"type":"void"}},{"name":"readValueForDescriptor","summary":"<p>Reads the value of a descriptor. The result of this operation is returned via the didUpdateValueForDescriptor event.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"descriptor","summary":"<p>The characteristic descriptor whose value you want to read.</p>\n","type":"Modules.BLE.Descriptor"}],"returns":{"type":"void"}},{"name":"requestConnectionPriority","summary":"<p>Request the specific connection priority. This method will send connection parameter update request to the remote device.</p>\n","platforms":[{"since":"1.0.0","name":"android"}],"parameters":[{"name":"connectionPriority","summary":"<p>Connection priority to set. Must be one of CONNECTION_PRIORITY_HIGH, CONNECTION_PRIORITY_BALANCED and CONNECTION_PRIORITY_LOW_POWER.</p>\n","type":"Number"}],"returns":{"type":"void"}},{"name":"subscribeToCharacteristic","summary":"<p>Enables notifications/indications for a characteristic. If the characteristic allows both, notifications will be used.</p>\n","description":"<p>In Android, subscribing to a characteristic is a two step process in which, first the setCharacteristicNotification() is called which enables the notification locally(on Android device), followed by writing on the descriptor, which is optional.\nIf the second paramater(descriptorUUID) not provided, then writing on the descriptor would not be done. Reference (https://developer.android.com/guide/topics/connectivity/bluetooth-le#notification)</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristic","summary":"<p>The characteristic whose value you want to read.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"descriptorUUID=\"00002902-0000-1000-8000-00805f9b34fb\"","summary":"<p>The UUID of the configuration descriptor of the characteristic. The module will attempt to write descriptorValue to this descriptor. If you do not want the module to do this, set this parameter to an empty string. This parameter is only for Android.</p>\n","type":"String","optional":true},{"name":"descriptorValue=ENABLE_NOTIFICATION_VALUE","summary":"<p>The value to be written to the configuration descriptor. This parameter is only for Android.</p>\n","type":"Titanium.Buffer","optional":true}],"returns":{"type":"void"}},{"name":"unsubscribeFromCharacteristic","summary":"<p>Disables notifications/indications for a characteristic.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristic","summary":"<p>The characteristic whose value you want to read.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"descriptorUUID=\"00002902-0000-1000-8000-00805f9b34fb\"","summary":"<p>The UUID of the configuration descriptor of the characteristic. The module will attempt to write descriptorValue to this descriptor. If you do not want the module to do this, set this parameter to an empty string. This parameter is only for Android.</p>\n","type":"String","optional":true},{"name":"descriptorValue=DISABLE_NOTIFICATION_VALUE","summary":"<p>The value to be written to the configuration descriptor. This parameter is only for Android.</p>\n","type":"Titanium.Buffer","optional":true}],"returns":{"type":"void"}},{"name":"writeValueForCharacteristic","summary":"<p>Writes a value to a characteristic.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"characteristic","summary":"<p>The characteristic whose value you want to write.</p>\n","type":"Modules.BLE.Characteristic"},{"name":"data","summary":"<p>The new value of the characteristic.</p>\n","type":"Titanium.Buffer"},{"name":"characteristicWriteType","summary":"<p>The type of write to be executed. See CHARACTERISTIC_TYPE_WRITE_WITH_RESPONSE and CHARACTERISTIC_TYPE_WRITE_WITHOUT_RESPONSE.</p>\n","type":"Number"}],"returns":{"type":"void"}},{"name":"writeValueForDescriptor","summary":"<p>Writes the value of a descriptor. The result of this operation is returned via the didWriteValueForDescriptor event.</p>\n","description":"<p>Writes the value of a characteristic descriptor.\nThis method copies the data passed into the data parameter, and you can dispose of it after the method returns.\nNote (iOS): You can’t use this method to write the value of a client configuration descriptor (represented by the BLE.CBUUID_CLIENT_CHARACTERISTIC_CONFIGURATION_STRING constant),\nwhich describes the configuration of notification or indications for a characteristic’s value.\nIf you want to manage notifications or indications for a characteristic’s value, you must use the subscribeToCharacteristic({characteristic:}) and unsubscribeFromCharacteristic({characteristic:}) method instead.\nAnother Note (iOS): Once published, you can’t update the value dynamically. Reference (https://developer.apple.com/documentation/corebluetooth/cbmutabledescriptor/1518999-init)</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"descriptor","summary":"<p>The descriptor whose value you want to write.</p>\n","type":"Modules.BLE.Descriptor"},{"name":"data","summary":"<p>The new value of the characteristic.</p>\n","type":"Titanium.Buffer"}],"returns":{"type":"void"}}],"properties":[{"name":"address","summary":"<p>Once a peripheral has been connected at least once by the system, it is assigned a address (UUID). This address can be stored and later provided to the retrievePeripherals method.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"String"},{"name":"ancsAuthorized","summary":"<p>A Boolean value that indicates if the remote device has authorization to receive data over ANCS protocol.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Boolean"},{"name":"canSendWriteWithoutResponse","summary":"<p>A Boolean value that indicates whether the remote device can send a write without a response.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Boolean"},{"name":"isConnected","summary":"<p>Whether or not the peripheral is currently connected.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Boolean"},{"name":"name","summary":"<p>The name of the peripheral.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"String"},{"name":"services","summary":"<p>A list of a peripheral’s discovered services.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Array<Modules.BLE.Service>"},{"name":"state","summary":"<p>The current connection state of the peripheral. Possible values defined by PERIPHERAL_STATE_* constants.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Number"}],"subtype":"proxy","constants":[]}

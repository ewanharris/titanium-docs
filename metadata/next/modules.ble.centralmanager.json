{"name":"Modules.BLE.CentralManager","summary":"<p>An object that scans for, discovers, connects to, and manages peripherals.</p>\n","extends":"Titanium.Proxy","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"object","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/CentralManager.yml","events":[{"name":"didUpdateState","summary":"<p>A event called when centrel manager state updated</p>\n","description":"<p>Invoked whenever the central manager's state has been updated. Commands should only be issued when the state is\nModules.BLE.MANAGER_STATE_POWERED_ON. A state below Modules.BLE.MANAGER_STATE_POWERED_ON\nimplies that scanning has stopped and any connected peripherals have been disconnected. If the state moves below\nModules.BLE.MANAGER_STATE_POWERED_OFF, all Peripheral objects obtained from this central\nmanager become invalid and must be retrieved or discovered again.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"state","summary":"<p>state of central manager</p>\n","type":"Number"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"willRestoreState","summary":"<p>A event called when centrel manager will restore state</p>\n","description":"<p>For apps that opt-in to state preservation and restoration, this is the first event invoked when your app is relaunched into\nthe background to complete some Bluetooth-related task. Use this method to synchronize your app's state with the state of the\nBluetooth system.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"peripherals","summary":"<p>The array contains all of the peripherals connected to the central manager (or had a pending connection) at the time the system terminated the app.</p>\n","type":"Array<Modules.BLE.Peripheral>"},{"name":"services","summary":"<p>an NSArray of service UUIDs containing all the services the central manager was scanning for at the time the system terminated the app.</p>\n","type":"Array<Modules.BLE.Service>"},{"name":"options","summary":"<p>The dictionary contains all of the peripheral scan options in use by the central manager when the system terminated the app.</p>\n","type":"Array<Modules.BLE.Service>"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didDiscoverPeripheral","summary":"<p>A event called when centrel manager discover peripheral</p>\n","description":"<p>This method is invoked while scanning, upon the discovery of peripheral by central. A discovered peripheral must\nbe retained in order to use it; otherwise, it is assumed to not be of interest and will be cleaned up by the central manager. For\na list of discovered peripherals, see peripherals property</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"peripheral","summary":"<p>object of discovered  peripheral</p>\n","type":"Modules.BLE.Peripheral"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didConnectPeripheral","summary":"<p>This event is called when a connection initiated by connectPeripheral has succeeded.</p>\n","description":"<p>This event is called when a connection initiated by connectPeripheral has succeeded.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"peripheral","summary":"<p>An object representing the peripheral that connected to the local central manager.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didFailToConnectPeripheral","summary":"<p>This event is called when a connection initiated by connectPeripheral has failed.</p>\n","description":"<p>This event is called when a connection initiated by connectPeripheral has failed to complete. As connection attempts do not\ntimeout, the failure of a connection is atypical and usually indicative of a transient issue.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"peripheral","summary":"<p>An object representing the peripheral that failed to connect.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred..</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didDisconnectPeripheral","summary":"<p>This event is called when a peripheral disconnected.</p>\n","description":"<p>This event is called upon the disconnection of a peripheral that was connected by connectPeripheral If the disconnection\nwas not initiated by cancelPeripheralConnection, the cause will be detailed in the error parameter. Once this method has been\ncalled, no more event will be invoked on peripheral.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"peripheral","summary":"<p>An object representing the peripheral that disconnected.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"errorCode","summary":"<p>The error code; only present if an error occurred.</p>\n","type":"String"},{"name":"errorDomain","summary":"<p>The error domain; only present if an error occurred..</p>\n","type":"String"},{"name":"errorDescription","summary":"<p>The error description; only peresent if an</p>\n","type":"String"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"connectionEventDidOccur","summary":"<p>This method is called upon the connection or disconnection of a peripheral that matches any of the options provided in registerForConnectionEventsWithOptions</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"event","summary":"<p>event value will be Moduels.BLE.CONNECTION_EVENT_TYPE_PEER_DISCONNECTED or Moduels.BLE.CONNECTION_EVENT_TYPE_PEER_CONNECTED</p>\n","type":"Number"},{"name":"peripheral","summary":"<p>object of peripheral.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]},{"name":"didUpdateANCSAuthorization","summary":"<p>This event is called when the authorization status changes for a peripheral connected with connectPeripheral with option Modules.BLE.CONNECT_PERIPHERAL_OPTIONS_KEY_REQUIRES_ANCS</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"properties":[{"name":"peripheral","summary":"<p>object of peripheral which disconnected.</p>\n","type":"Modules.BLE.Peripheral"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"}]}],"methods":[{"name":"cancelPeripheralConnection","summary":"<p>Cancels an active or pending connection to peripheral. Note that this is non-blocking, and any Peripheral commands that are still pending to peripheral may or may not complete.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"peripheral","summary":"<p>peripheral object which connnection will be canceled</p>\n","type":"Modules.BLE.Peripheral"}],"returns":{"type":"void"}},{"name":"connectPeripheral","summary":"<p>Initiates a connection to peripheral. Connection attempts never time out and, depending on the outcome, will result in a call to either didConnectPeripheral or didFailToConnectPeripheral event. Pending attempts are cancelled automatically upon deallocation of peripheral, and explicitly via Modules.BLE.CentralManager.cancelPeripheralConnection}.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"peripheral","summary":"<p>peripheral object to connect</p>\n","type":"Modules.BLE.Peripheral"},{"name":"options","summary":"<p>This parameter is specific for the iphone, ipad platforms. An optional dictionary specifying connection behavior options. all available dictionary keys are defined as Modules.BLE.CONNECT_PERIPHERAL_OPTIONS_KEY_*</p>\n","type":"Object","optional":true}],"returns":{"type":"void"}},{"name":"createPeripheral","summary":"<p>Creates a Modules.BLE.Peripheral class object with the given address.</p>\n","platforms":[{"since":"1.0.0","name":"android"}],"parameters":[{"name":"address","summary":"<p>address of the remote bluetooth device.</p>\n","type":"String"}],"returns":{"type":"Modules.BLE.Peripheral"}},{"name":"isAccessFineLocationPermissionGranted","summary":"<p>Determines whether the ACCESS_FINE_LOCATION permission is granted or not.</p>\n","description":"<p>ACCESS_FINE_LOCATION permission is provided at runtime by the app user. To request this permission\nuse <a href=\"/api/modules/ble/centralmanager.html#requestaccessfinelocationpermission\">requestAccessFineLocationPermission</a> method</p>\n","platforms":[{"since":"1.0.0","name":"android"}],"returns":{"summary":"<p>Returns true if the ACCESS_FINE_LOCATION permission is granted</p>\n","type":"Boolean"}},{"name":"registerForConnectionEvents","summary":"<p>Calls connectionEventDidOccur event when a connection event occurs matching any of the given options. Passing nil in the option parameter clears any prior registered matching options.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"peripherals","summary":"<p>A list of peripherals UUIDs.</p>\n","type":"Array<String>","optional":true},{"name":"services","summary":"<p>A list of services UUIDs.</p>\n","type":"Array<String>","optional":true}],"returns":{"type":"void"}},{"name":"requestAccessFineLocationPermission","summary":"<p>Request for the <code>ACCESS_FINE_LOCATION</code>.</p>\n","description":"<p>This permission is necessary for the Bluetooth device to scan the nearby BLE devices or other Bluetooth operations.</p>\n","platforms":[{"since":"1.0.0","name":"android"}],"returns":{"type":"void"}},{"name":"retrieveConnectedPeripheralsWithServices","summary":"<p>Returns a list of the peripherals connected to the system whose services match a given set of criteria.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"UUIDs","summary":"<p>A list of service UUIDs.</p>\n","type":"Array<String>"}],"returns":{"type":"Array<Modules.BLE.Peripheral>"}},{"name":"retrievePeripheralsWithIdentifiers","summary":"<p>Returns a list of known peripherals by their identifiers.</p>\n","platforms":[{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"UUIDs","summary":"<p>A list of peripheral identifiers from which Peripheral objects can be retrieved.</p>\n","type":"Array<String>"}],"returns":{"type":"Array<Modules.BLE.Peripheral>"}},{"name":"startScan","summary":"<p>Starts scanning for peripherals.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"parameters":[{"name":"services","summary":"<p>The UUIDs of services.</p>\n","type":"Array<String>","optional":true},{"name":"options","summary":"<p>Key/value pairs specifying options for the scan.</p>\n","type":"Modules.BLE.CentralScanOptions","optional":true}],"returns":{"type":"void"}},{"name":"stopScan","summary":"<p>Stops scanning for peripherals.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"returns":{"type":"void"}}],"properties":[{"name":"isScanning","summary":"<p>A Boolean value that indicates whether the central is currently scanning.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Boolean"},{"name":"peripherals","summary":"<p>All discovered peripherals</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Array<Modules.BLE.Peripheral>"},{"name":"state","summary":"<p>State of the module's internal central manager. For android, it is the current state of the local Bluetooth adapter. Its value is one of the MANAGER_STATE_* constants.</p>\n","platforms":[{"since":"1.0.0","name":"android"},{"since":"1.0.0","name":"iphone"},{"since":"1.0.0","name":"ipad"}],"type":"Number","permission":"read-only"}],"subtype":"proxy","constants":[]}
